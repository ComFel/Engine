int main ()
    {

        // crear ventana

        // crear escena (recibe referencia a la ventana)

        // ejecutar escena

        return 0;

    }



    class Scene
    {

        // guarda puntero a la ventana

        // tiene sistemas y tareas

        // tiene un kernel que ejecuta los sistemas y tareas

        // tiene entidades

        // en el constructor se recibe la ruta del archivo que describe la escena

        // tiene un método que se encarga de la carga del archivo que describe la escena

    };



    class Task
    {

        // declara los métodos que deben implementar tareas/sistemas

        // gestiona la prioridad

        // destructor virtual...

    };



    class Component
    {

        // sabe a qué entidad pertenece

        // destructor virtual...

    };



    class Render_Component : public Component
    {

        // guarda el modelo que combina malla y material

    };



    class Transform : public Component
    {    

        // guarda desplazamiento, orientación y escala

    };


    class Physics_Component : public Component
    {    

        // guarda el cuerpo rígido asociado a la entidad

	// control de fisicas o similar

    };



    class Entity
    {

        // guarda punteros al parent y a la escena

        // tiene un id?

        // tiene una lista o mapa de componentes

        // el componente transform podría estar siempre presente (aparte del resto de componentes)

        // permite acceder a los componentes (y al transform)

    };



    class System : public Task
    {

        // sabe a qué escena pertenece
	
	// controla las prioridades de las task

        // destructor virtual...

    };

    class Kernel
    {

        // controla y maneja las tasks

    };

